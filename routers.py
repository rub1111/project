from aiogram import Router
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

secretary = Router()


def services_kb():
    builder = InlineKeyboardBuilder()

    builder.row(InlineKeyboardButton(
        text="–£—Å–ª—É–≥–∞ 1", callback_data="payment")
    )
    builder.row(InlineKeyboardButton(
        text="–£—Å–ª—É–≥–∞ 2", callback_data="payment")
    )
    builder.row(InlineKeyboardButton(
        text="–£—Å–ª—É–≥–∞ 3", callback_data="payment")
    )
    return builder


def put_money_kb():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(
        text="–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üí≤", callback_data="payment")
    )
    return builder


@secretary.message()
async def add_task(message: Message):
    
    balance = 0
    if message.text == "–ü—Ä–æ—Ñ–∏–ª—å üë§":
        builder = put_money_kb()
        await message.answer(f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å üë§\n–ë–∞–ª–∞–Ω—Å {balance} —Ä—É–±", reply_markup=builder.as_markup()) 

    elif message.text == "–¢–æ–≤–∞—Ä—ã üõí":
        builder = services_kb()
        await message.answer(f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥ üõçÔ∏è", reply_markup=builder.as_markup())
        

@secretary.callback_query()
async def payment_failed(call: CallbackQuery):
    await call.message.answer("–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤ –¥–∞–Ω–µ–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ (")